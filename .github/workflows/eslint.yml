name: ESLint

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  schedule:
    - cron: '25 4 * * 4'

jobs:
  eslint:
    name: Run ESLint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci

      - name: Run ESLint on Frontend
        run: |
          cd frontend
          npx eslint "src/**/*.{js,jsx,ts,tsx}" \
            --format @microsoft/eslint-formatter-sarif \
            --output-file ../eslint-frontend-results.sarif
        continue-on-error: true

      - name: Run ESLint on Backend
        run: |
          cd backend
          npx eslint "**/*.{js,ts}" \
            --ignore-path .gitignore \
            --format @microsoft/eslint-formatter-sarif \
            --output-file ../eslint-backend-results.sarif
        continue-on-error: true

      - name: Upload Frontend analysis results to GitHub
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-frontend-results.sarif
          category: 'Frontend ESLint'

      - name: Upload Backend analysis results to GitHub
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-backend-results.sarif
          category: 'Backend ESLint'
